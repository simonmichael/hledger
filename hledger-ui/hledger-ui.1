
.TH "hledger-ui" "1" "January 2020" "hledger-ui 1.16.99" "hledger User Manuals"



.SH NAME
.PP
hledger-ui - terminal interface for the hledger accounting tool
.SH SYNOPSIS
.PP
\f[C]hledger-ui [OPTIONS] [QUERYARGS]\f[R]
.PD 0
.P
.PD
\f[C]hledger ui -- [OPTIONS] [QUERYARGS]\f[R]
.SH DESCRIPTION
.PP
hledger is a cross-platform program for tracking money, time, or any
other commodity, using double-entry accounting and a simple, editable
file format.
hledger is inspired by and largely compatible with ledger(1).
.PP
hledger-ui is hledger\[aq]s terminal interface, providing an efficient
full-window text UI for viewing accounts and transactions, and some
limited data entry capability.
It is easier than hledger\[aq]s command-line interface, and sometimes
quicker and more convenient than the web interface.
.PP
Note hledger-ui has some different defaults (experimental):
.IP \[bu] 2
it generates rule-based transactions and postings by default (--forecast
and --auto are always on).
.IP \[bu] 2
it hides transactions dated in the future by default (change this with
--future or the F key).
.PP
Like hledger, it reads data from one or more files in hledger journal,
timeclock, timedot, or CSV format specified with \f[C]-f\f[R], or
\f[C]$LEDGER_FILE\f[R], or \f[C]$HOME/.hledger.journal\f[R] (on windows,
perhaps \f[C]C:/Users/USER/.hledger.journal\f[R]).
For more about this see hledger(1), hledger_journal(5) etc.
.SH OPTIONS
.PP
Note: if invoking hledger-ui as a hledger subcommand, write \f[C]--\f[R]
before options as shown above.
.PP
Any QUERYARGS are interpreted as a hledger search query which filters
the data.
.TP
\f[B]\f[CB]--watch\f[B]\f[R]
watch for data and date changes and reload automatically
.TP
\f[B]\f[CB]--theme=default|terminal|greenterm\f[B]\f[R]
use this custom display theme
.TP
\f[B]\f[CB]--register=ACCTREGEX\f[B]\f[R]
start in the (first) matched account\[aq]s register screen
.TP
\f[B]\f[CB]--change\f[B]\f[R]
show period balances (changes) at startup instead of historical balances
.TP
\f[B]\f[CB]-F --flat\f[B]\f[R]
show accounts as a list (default)
.TP
\f[B]\f[CB]-T --tree\f[B]\f[R]
show accounts as a tree
.TP
\f[B]\f[CB]--future\f[B]\f[R]
show transactions dated later than today (normally hidden)
.PP
hledger input options:
.TP
\f[B]\f[CB]-f FILE --file=FILE\f[B]\f[R]
use a different input file.
For stdin, use - (default: \f[C]$LEDGER_FILE\f[R] or
\f[C]$HOME/.hledger.journal\f[R])
.TP
\f[B]\f[CB]--rules-file=RULESFILE\f[B]\f[R]
Conversion rules file to use when reading CSV (default: FILE.rules)
.TP
\f[B]\f[CB]--separator=CHAR\f[B]\f[R]
Field separator to expect when reading CSV (default: \[aq],\[aq])
.TP
\f[B]\f[CB]--alias=OLD=NEW\f[B]\f[R]
rename accounts named OLD to NEW
.TP
\f[B]\f[CB]--anon\f[B]\f[R]
anonymize accounts and payees
.TP
\f[B]\f[CB]--pivot FIELDNAME\f[B]\f[R]
use some other field or tag for the account name
.TP
\f[B]\f[CB]-I --ignore-assertions\f[B]\f[R]
disable balance assertion checks (note: does not disable balance
assignments)
.PP
hledger reporting options:
.TP
\f[B]\f[CB]-b --begin=DATE\f[B]\f[R]
include postings/txns on or after this date
.TP
\f[B]\f[CB]-e --end=DATE\f[B]\f[R]
include postings/txns before this date
.TP
\f[B]\f[CB]-D --daily\f[B]\f[R]
multiperiod/multicolumn report by day
.TP
\f[B]\f[CB]-W --weekly\f[B]\f[R]
multiperiod/multicolumn report by week
.TP
\f[B]\f[CB]-M --monthly\f[B]\f[R]
multiperiod/multicolumn report by month
.TP
\f[B]\f[CB]-Q --quarterly\f[B]\f[R]
multiperiod/multicolumn report by quarter
.TP
\f[B]\f[CB]-Y --yearly\f[B]\f[R]
multiperiod/multicolumn report by year
.TP
\f[B]\f[CB]-p --period=PERIODEXP\f[B]\f[R]
set start date, end date, and/or reporting interval all at once using
period expressions syntax
.TP
\f[B]\f[CB]--date2\f[B]\f[R]
match the secondary date instead (see command help for other effects)
.TP
\f[B]\f[CB]-U --unmarked\f[B]\f[R]
include only unmarked postings/txns (can combine with -P or -C)
.TP
\f[B]\f[CB]-P --pending\f[B]\f[R]
include only pending postings/txns
.TP
\f[B]\f[CB]-C --cleared\f[B]\f[R]
include only cleared postings/txns
.TP
\f[B]\f[CB]-R --real\f[B]\f[R]
include only non-virtual postings
.TP
\f[B]\f[CB]-NUM --depth=NUM\f[B]\f[R]
hide/aggregate accounts or postings more than NUM levels deep
.TP
\f[B]\f[CB]-E --empty\f[B]\f[R]
show items with zero amount, normally hidden (and vice-versa in
hledger-ui/hledger-web)
.TP
\f[B]\f[CB]-B --cost\f[B]\f[R]
convert amounts to their cost at transaction time (using the transaction
price, if any)
.TP
\f[B]\f[CB]-V --value\f[B]\f[R]
convert amounts to their market value on the report end date (using the
most recent applicable market price, if any)
.TP
\f[B]\f[CB]--auto\f[B]\f[R]
apply automated posting rules to modify transactions.
.TP
\f[B]\f[CB]--forecast\f[B]\f[R]
apply periodic transaction rules to generate future transactions, to 6
months from now or report end date.
.PP
When a reporting option appears more than once in the command line, the
last one takes precedence.
.PP
Some reporting options can also be written as query arguments.
.PP
hledger help options:
.TP
\f[B]\f[CB]-h --help\f[B]\f[R]
show general usage (or after COMMAND, command usage)
.TP
\f[B]\f[CB]--version\f[B]\f[R]
show version
.TP
\f[B]\f[CB]--debug[=N]\f[B]\f[R]
show debug output (levels 1-9, default: 1)
.PP
A \[at]FILE argument will be expanded to the contents of FILE, which
should contain one command line option/argument per line.
(To prevent this, insert a \f[C]--\f[R] argument before.)
.SH KEYS
.PP
\f[C]?\f[R] shows a help dialog listing all keys.
(Some of these also appear in the quick help at the bottom of each
screen.) Press \f[C]?\f[R] again (or \f[C]ESCAPE\f[R], or
\f[C]LEFT\f[R]) to close it.
The following keys work on most screens:
.PP
The cursor keys navigate: \f[C]right\f[R] (or \f[C]enter\f[R]) goes
deeper, \f[C]left\f[R] returns to the previous screen,
\f[C]up\f[R]/\f[C]down\f[R]/\f[C]page up\f[R]/\f[C]page down\f[R]/\f[C]home\f[R]/\f[C]end\f[R]
move up and down through lists.
Vi-style (\f[C]h\f[R]/\f[C]j\f[R]/\f[C]k\f[R]/\f[C]l\f[R]) and
Emacs-style
(\f[C]CTRL-p\f[R]/\f[C]CTRL-n\f[R]/\f[C]CTRL-f\f[R]/\f[C]CTRL-b\f[R])
movement keys are also supported.
A tip: movement speed is limited by your keyboard repeat rate, to move
faster you may want to adjust it.
(If you\[aq]re on a mac, the Karabiner app is one way to do that.)
.PP
With shift pressed, the cursor keys adjust the report period, limiting
the transactions to be shown (by default, all are shown).
\f[C]shift-down/up\f[R] steps downward and upward through these standard
report period durations: year, quarter, month, week, day.
Then, \f[C]shift-left/right\f[R] moves to the previous/next period.
\f[C]t\f[R] sets the report period to today.
With the \f[C]--watch\f[R] option, when viewing a \[dq]current\[dq]
period (the current day, week, month, quarter, or year), the period will
move automatically to track the current date.
To set a non-standard period, you can use \f[C]/\f[R] and a
\f[C]date:\f[R] query.
.PP
\f[C]/\f[R] lets you set a general filter query limiting the data shown,
using the same query terms as in hledger and hledger-web.
While editing the query, you can use CTRL-a/e/d/k, BS, cursor keys;
press \f[C]ENTER\f[R] to set it, or \f[C]ESCAPE\f[R]to cancel.
There are also keys for quickly adjusting some common filters like
account depth and transaction status (see below).
\f[C]BACKSPACE\f[R] or \f[C]DELETE\f[R] removes all filters, showing all
transactions.
.PP
As mentioned above, hledger-ui shows auto-generated periodic
transactions, and hides future transactions (auto-generated or not) by
default.
\f[C]F\f[R] toggles showing and hiding these future transactions.
This is similar to using a query like \f[C]date:-tomorrow\f[R], but more
convenient.
(experimental)
.PP
\f[C]ESCAPE\f[R] removes all filters and jumps back to the top screen.
Or, it cancels a minibuffer edit or help dialog in progress.
.PP
\f[C]CTRL-l\f[R] redraws the screen and centers the selection if
possible (selections near the top won\[aq]t be centered, since we
don\[aq]t scroll above the top).
.PP
\f[C]g\f[R] reloads from the data file(s) and updates the current screen
and any previous screens.
(With large files, this could cause a noticeable pause.)
.PP
\f[C]I\f[R] toggles balance assertion checking.
Disabling balance assertions temporarily can be useful for
troubleshooting.
.PP
\f[C]a\f[R] runs command-line hledger\[aq]s add command, and reloads the
updated file.
This allows some basic data entry.
.PP
\f[C]A\f[R] is like \f[C]a\f[R], but runs the hledger-iadd tool, which
provides a terminal interface.
This key will be available if \f[C]hledger-iadd\f[R] is installed in
$PATH.
.PP
\f[C]E\f[R] runs $HLEDGER_UI_EDITOR, or $EDITOR, or a default
(\f[C]emacsclient -a \[dq]\[dq] -nw\f[R]) on the journal file.
With some editors (emacs, vi), the cursor will be positioned at the
current transaction when invoked from the register and transaction
screens, and at the error location (if possible) when invoked from the
error screen.
.PP
\f[C]q\f[R] quits the application.
.PP
Experimental:
.PP
\f[C]B\f[R] toggles cost mode, showing amounts in their transaction
price\[aq]s commodity (like toggling the \f[C]-B/--cost\f[R] flag).
.PP
\f[C]V\f[R] toggles value mode, showing amounts\[aq] current market
value in their default valuation commodity (like toggling the
\f[C]-V/--market\f[R] flag).
Note, \[dq]current market value\[dq] means the value on the report end
date if specified, otherwise today.
To see the value on another date, you can temporarily set that as the
report end date.
Eg: to see a transaction as it was valued on july 30, go to the accounts
or register screen, press \f[C]/\f[R], and add \f[C]date:-7/30\f[R] to
the query.
.PP
At most one of cost or value mode can be active at once.
.PP
There\[aq]s not yet any visual reminder when cost or value mode is
active; for now pressing \f[C]B\f[R] \f[C]B\f[R] \f[C]V\f[R] should
reliably reset to normal mode.
.PP
With --watch active, if you save an edit to the journal file while
viewing the transaction screen in cost or value mode, the
\f[C]B\f[R]/\f[C]V\f[R] keys will stop working.
To work around, press g to force a manual reload, or exit the
transaction screen.
.PP
Additional screen-specific keys are described below.
.SH SCREENS
.SS Accounts screen
.PP
This is normally the first screen displayed.
It lists accounts and their balances, like hledger\[aq]s balance
command.
By default, it shows all accounts and their latest ending balances
(including the balances of subaccounts).
if you specify a query on the command line, it shows just the matched
accounts and the balances from matched transactions.
.PP
Account names are shown as a flat list by default.
Press \f[C]T\f[R] to toggle tree mode.
In flat mode, account balances are exclusive of subaccounts, except
where subaccounts are hidden by a depth limit (see below).
In tree mode, all account balances are inclusive of subaccounts.
.PP
To see less detail, press a number key, \f[C]1\f[R] to \f[C]9\f[R], to
set a depth limit.
Or use \f[C]-\f[R] to decrease and \f[C]+\f[R]/\f[C]=\f[R] to increase
the depth limit.
\f[C]0\f[R] shows even less detail, collapsing all accounts to a single
total.
To remove the depth limit, set it higher than the maximum account depth,
or press \f[C]ESCAPE\f[R].
.PP
\f[C]H\f[R] toggles between showing historical balances or period
balances.
Historical balances (the default) are ending balances at the end of the
report period, taking into account all transactions before that date
(filtered by the filter query if any), including transactions before the
start of the report period.
In other words, historical balances are what you would see on a bank
statement for that account (unless disturbed by a filter query).
Period balances ignore transactions before the report start date, so
they show the change in balance during the report period.
They are more useful eg when viewing a time log.
.PP
\f[C]U\f[R] toggles filtering by unmarked status, including or excluding
unmarked postings in the balances.
Similarly, \f[C]P\f[R] toggles pending postings, and \f[C]C\f[R] toggles
cleared postings.
(By default, balances include all postings; if you activate one or two
status filters, only those postings are included; and if you activate
all three, the filter is removed.)
.PP
\f[C]R\f[R] toggles real mode, in which virtual postings are ignored.
.PP
\f[C]Z\f[R] toggles nonzero mode, in which only accounts with nonzero
balances are shown (hledger-ui shows zero items by default, unlike
command-line hledger).
.PP
Press \f[C]right\f[R] or \f[C]enter\f[R] to view an account\[aq]s
transactions register.
.SS Register screen
.PP
This screen shows the transactions affecting a particular account, like
a check register.
Each line represents one transaction and shows:
.IP \[bu] 2
the other account(s) involved, in abbreviated form.
(If there are both real and virtual postings, it shows only the accounts
affected by real postings.)
.IP \[bu] 2
the overall change to the current account\[aq]s balance; positive for an
inflow to this account, negative for an outflow.
.IP \[bu] 2
the running historical total or period total for the current account,
after the transaction.
This can be toggled with \f[C]H\f[R].
Similar to the accounts screen, the historical total is affected by
transactions (filtered by the filter query) before the report start
date, while the period total is not.
If the historical total is not disturbed by a filter query, it will be
the running historical balance you would see on a bank register for the
current account.
.PP
Transactions affecting this account\[aq]s subaccounts will be included
in the register if the accounts screen is in tree mode, or if it\[aq]s
in flat mode but this account has subaccounts which are not shown due to
a depth limit.
In other words, the register always shows the transactions contributing
to the balance shown on the accounts screen.
.PD 0
.P
.PD
Tree mode/flat mode can be toggled with \f[C]T\f[R] here also.
.PP
\f[C]U\f[R] toggles filtering by unmarked status, showing or hiding
unmarked transactions.
Similarly, \f[C]P\f[R] toggles pending transactions, and \f[C]C\f[R]
toggles cleared transactions.
(By default, transactions with all statuses are shown; if you activate
one or two status filters, only those transactions are shown; and if you
activate all three, the filter is removed.)
.PP
\f[C]R\f[R] toggles real mode, in which virtual postings are ignored.
.PP
\f[C]Z\f[R] toggles nonzero mode, in which only transactions posting a
nonzero change are shown (hledger-ui shows zero items by default, unlike
command-line hledger).
.PP
Press \f[C]right\f[R] (or \f[C]enter\f[R]) to view the selected
transaction in detail.
.SS Transaction screen
.PP
This screen shows a single transaction, as a general journal entry,
similar to hledger\[aq]s print command and journal format
(hledger_journal(5)).
.PP
The transaction\[aq]s date(s) and any cleared flag, transaction code,
description, comments, along with all of its account postings are shown.
Simple transactions have two postings, but there can be more (or in
certain cases, fewer).
.PP
\f[C]up\f[R] and \f[C]down\f[R] will step through all transactions
listed in the previous account register screen.
In the title bar, the numbers in parentheses show your position within
that account register.
They will vary depending on which account register you came from
(remember most transactions appear in multiple account registers).
The #N number preceding them is the transaction\[aq]s position within
the complete unfiltered journal, which is a more stable id (at least
until the next reload).
.SS Error screen
.PP
This screen will appear if there is a problem, such as a parse error,
when you press g to reload.
Once you have fixed the problem, press g again to reload and resume
normal operation.
(Or, you can press escape to cancel the reload attempt.)
.SH ENVIRONMENT
.PP
\f[B]COLUMNS\f[R] The screen width to use.
Default: the full terminal width.
.PP
\f[B]LEDGER_FILE\f[R] The journal file path when not specified with
\f[C]-f\f[R].
Default: \f[C]\[ti]/.hledger.journal\f[R] (on windows, perhaps
\f[C]C:/Users/USER/.hledger.journal\f[R]).
.SH FILES
.PP
Reads data from one or more files in hledger journal, timeclock,
timedot, or CSV format specified with \f[C]-f\f[R], or
\f[C]$LEDGER_FILE\f[R], or \f[C]$HOME/.hledger.journal\f[R] (on windows,
perhaps \f[C]C:/Users/USER/.hledger.journal\f[R]).
.SH BUGS
.PP
The need to precede options with \f[C]--\f[R] when invoked from hledger
is awkward.
.PP
\f[C]-f-\f[R] doesn\[aq]t work (hledger-ui can\[aq]t read from stdin).
.PP
\f[C]-V\f[R] affects only the accounts screen.
.PP
When you press \f[C]g\f[R], the current and all previous screens are
regenerated, which may cause a noticeable pause with large files.
Also there is no visual indication that this is in progress.
.PP
\f[C]--watch\f[R] is not yet fully robust.
It works well for normal usage, but many file changes in a short time
(eg saving the file thousands of times with an editor macro) can cause
problems at least on OSX.
Symptoms include: unresponsive UI, periodic resetting of the cursor
position, momentary display of parse errors, high CPU usage eventually
subsiding, and possibly a small but persistent build-up of CPU usage
until the program is restarted.
.PP
Also, if you are viewing files mounted from another machine,
\f[C]--watch\f[R] requires that both machine clocks are roughly in step.


.SH "REPORTING BUGS"
Report bugs at http://bugs.hledger.org
(or on the #hledger IRC channel or hledger mail list)

.SH AUTHORS
Simon Michael <simon@joyful.com> and contributors

.SH COPYRIGHT

Copyright (C) 2007-2019 Simon Michael.
.br
Released under GNU GPL v3 or later.

.SH SEE ALSO
hledger(1), hledger\-ui(1), hledger\-web(1), hledger\-api(1),
hledger_csv(5), hledger_journal(5), hledger_timeclock(5), hledger_timedot(5),
ledger(1)

http://hledger.org
