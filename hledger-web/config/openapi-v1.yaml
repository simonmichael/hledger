# this was generated by claud sonnet 4 by pasting the ApiR.hs file into the chat
# and asking it to create this spec
openapi: 3.0.3

info:
  title: hledger-web json api
  description: >
    rest api for hledger plaintext accounting data. provides access to accounts,
    transactions, and financial reports with structured json responses.
  version: 1.0.0

servers:
  - url: http://localhost:5000/api/v1
    description: local hledger-web server

paths:
  /accounts:
    get:
      summary: list all accounts
      description: returns array of account names from the journal
      operationId: getAccounts
      responses:
        '200':
          description: list of account names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example: ["assets:checking", "expenses:food", "income:salary"]

  /accounts/{account_name}:
    get:
      summary: check if account exists
      description: verifies whether the specified account exists in the journal
      operationId: getAccount
      parameters:
        - name: account_name
          in: path
          required: true
          schema:
            type: string
          example: "assets:checking"
      responses:
        '200':
          description: account exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    type: string
                  exists:
                    type: boolean
                example:
                  account: "assets:checking"
                  exists: true
        '404':
          description: account not found

  /accounts/{account_name}/balance:
    get:
      summary: get account balance
      description: returns the current balance for the specified account
      operationId: getAccountBalance
      parameters:
        - name: account_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: account balance information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalance'

  # hide these for now because they blow up the llm context window, i need to
  # add pagination and filter params first
  #
  # /balance:
  #   get:
  #     summary: balance report
  #     description: generates a balance report showing account balances
  #     operationId: getBalanceReport
  #     responses:
  #       '200':
  #         description: balance report with accounts and total
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/BalanceReport'

  # /transactions:
  #   get:
  #     summary: list transactions
  #     description: returns all transactions with postings
  #     operationId: getTransactions
  #     responses:
  #       '200':
  #         description: array of transactions
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/Transaction'

  # /register:
  #   get:
  #     summary: register report
  #     description: chronological transaction register with running balances
  #     operationId: getRegisterReport
  #     responses:
  #       '200':
  #         description: register report with final balance and transaction list
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/RegisterReport'

components:
  schemas:
    AccountBalance:
      type: object
      properties:
        name:
          type: string
          description: account name
        balance:
          type: string
          description: account balance amount
        commodity:
          type: string
          description: currency or commodity symbol
        depth:
          type: integer
          description: account hierarchy depth
      example:
        name: "assets:checking"
        balance: "1234.56"
        commodity: "USD"
        depth: 2

    BalanceReport:
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountBalance'
        total:
          type: string
          description: total of all account balances
      example:
        accounts:
          - name: "assets:checking"
            balance: "1000.00"
            commodity: "USD"
            depth: 2
        total: "1000.00"

    Transaction:
      type: object
      properties:
        date:
          type: string
          format: date
          description: transaction date
        description:
          type: string
          description: transaction description
        postings:
          type: array
          items:
            $ref: '#/components/schemas/SimplePosting'
        status:
          type: string
          enum: ["unmarked", "pending", "cleared"]
      example:
        date: "2024-01-15"
        description: "groceries"
        postings:
          - account: "expenses:food"
            amount: "45.67"
          - account: "assets:checking"
            amount: "-45.67"
        status: "cleared"

    SimplePosting:
      type: object
      properties:
        account:
          type: string
          description: account name
        amount:
          type: string
          description: posting amount as string
      example:
        account: "expenses:food"
        amount: "45.67"

    RegisterReport:
      type: object
      properties:
        final_balance:
          type: array
          items:
            $ref: '#/components/schemas/Amount'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/RegisterTransaction'

    RegisterTransaction:
      type: object
      properties:
        date:
          type: string
          format: date
        description:
          type: string
        postings:
          type: array
          items:
            $ref: '#/components/schemas/StructuredPosting'
        status:
          type: string
          enum: ["unmarked", "pending", "cleared"]
        running_balance:
          type: array
          items:
            $ref: '#/components/schemas/Amount'

    StructuredPosting:
      type: object
      properties:
        account:
          type: string
        amount:
          type: array
          items:
            $ref: '#/components/schemas/Amount'

    Amount:
      type: object
      properties:
        commodity:
          type: string
          description: currency or commodity symbol
        quantity:
          type: string
          description: numeric amount without commodity
        cost_basis:
          type: string
          description: cost basis if this is a valued commodity
          nullable: true
      example:
        commodity: "USD"
        quantity: "1234.56"
